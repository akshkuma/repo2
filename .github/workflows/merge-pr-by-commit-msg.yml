name: Auto merge PRs with matching commit message

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find open PRs with commit message "archive json file"
        id: find_prs
        run: |
          echo "Searching for open PRs with commit message: archive json file"
          MATCH_MESSAGE="archive json file"
          MATCHING_PRS=()
      
          # Get all open PR numbers
          PR_NUMBERS=$(gh pr list --repo "$GITHUB_REPOSITORY" --state open --json number --jq '.[].number')
          echo "Found open PRs: $PR_NUMBERS"
      
          for PR in $PR_NUMBERS; do
            echo "---------------------------------------------"
            echo "üîç Checking PR #$PR"
      
            # Fetch raw PR JSON (debug-friendly)
            PR_JSON=$(gh pr view "$PR" --repo "$GITHUB_REPOSITORY" --json commits)
      
            echo "Raw commits JSON for PR #$PR:"
            echo "$PR_JSON"
      
            # Extract commit messages
            COMMITS=$(echo "$PR_JSON" | jq -r '.commits[].message')
      
            if [ -z "$COMMITS" ]; then
              echo "No commits found for PR #$PR"
              continue
            fi
      
            while IFS= read -r COMMIT_MSG; do
              echo "Commit message: $COMMIT_MSG"
              if [[ "${COMMIT_MSG,,}" == *"${MATCH_MESSAGE,,}"* ]]; then
                echo "Match found in PR #$PR"
                MATCHING_PRS+=("$PR")
                break
              fi
            done <<< "$COMMITS"
          done
      
          if [ ${#MATCHING_PRS[@]} -eq 0 ]; then
            echo "No matching PRs found."
            echo "found=false" >> $GITHUB_OUTPUT
          else
            echo "Matching PRs: ${MATCHING_PRS[*]}"
            printf "%s\n" "${MATCHING_PRS[@]}" > pr_list.txt
            echo "found=true" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Merge matching PRs
        if: steps.find_prs.outputs.found == 'true'
        run: |
          while read PR; do
            echo "Merging PR #$PR..."
            gh pr merge "$PR" --merge --delete-branch || true
          done < pr_list.txt
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
